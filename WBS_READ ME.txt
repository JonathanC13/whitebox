READ ME

Introduction:
	DatabasGUI is the GUI meant for filtering and viewing the information currently stored in the customer database. The user is able to choose their desired filter from the drop boxes and may input any specifications in the input box. We havn't masked the names of the database tables and columns that are displayed to the user, which pose a security risk. Once a the user has chosen what they want to view they must click add, then if they want more they may choose different specifications and click add again. The added filters are shown to allow the user, if the user wishes to delete an entry they must input the same specifications and click delete. Once the user wants to apply the filters then they must click apply, if the combination of filters are valid a table will be displayed. User may add more to the current filters or click clear all.

FileEditGUI is the GUI meant for adding customer information to the customer database, this is incomplete.
	How it should work:
		The user inputs the filename of the filled template, which is located at the directroy specified in the "config.xml" file, into the field and clicks enter. The information is extracted and insert SQL queries are constructed and executed. Also the filled template is copied to another directory which is alost specified in the config.xml file. Ideally it should display to the user the information in the same format as the it would if it was in the customer database, then the user has the option to commit it. But we have not been able to do this. We have been stalled at the stage to basically build and execute mulitple "insert into" queries to actually add to the database in the program.


Programs required:
	- MySQL (with the required versions of visual studio and python when installing)
	- Eclipse or Bluej (to run java)

Files included:
	Java files:
	- addOperation
	- Customer_Database_Controller	; Perform operations directly to the customer database
	- Customer_Database_INFO
	- DatabaseGUI			; GUI for filter the customer database
	- Databasetype
	- enterOperation
	- FileEditGUI			; GUI for insert to the customer database
	- Operations_Display
	- OperationType
	- removeOperation

	Referenced Libraries:
	- mysql-connector-java-5.1.38-bin.jar
	- commons-io-2.4.jar

	xml files:
	- config.xml			; contains directories for (source) InsertTemplate.xml (customer form template) and destination directory to copy to.
					; Also contains username and password you have set for the customer database, make sure your mySQL account has correct privilages.
	- InsertTemplate.xml		; Template form for customer information meant to be uploaded to insert to the customer database.

	mySQL files:
	- WhiteBoxCodeScript.sql
	- WhiteBoxTestScript.sql

Program set up:
	- After downloading the code, you can import the Existing Proejct into the Workspace.
	- Make sure you have "mysql-connector-java-5.1.38-bin.jar" and "commons-io-2.4.jar" as Referenced Libraries.
	- This project has two seperate GUIs that are not connected, they both have their own main method. Right click the one of the GUI java files in eclipse or bluej and run.
		- Inserting to the database doesn't work properly so running "FileEditGUI.java" is not much use.
		- "DatabaseGUI.java" is the GUI for filtering the customer database. The operations work properly.
	- In mySQL, you'll need to create and populate the database, so execute the file "WhiteBoxCodeScript.sql" in mySQL to create the database and tables. To populate the tables, execute "WhiteBoxTestScript.sql."
	- May need to set up mySQL accounts and give privilages to the database and then change the account settings in the "config.xml"	

	